1
00:00:02,070 --> 00:00:03,800
Now that we also migrated

2
00:00:03,800 --> 00:00:05,030
the welcome component,

3
00:00:05,030 --> 00:00:07,900
it's time to finally migrate the app component

4
00:00:07,900 --> 00:00:08,733
as well though,

5
00:00:08,733 --> 00:00:10,980
because this will then also allow us

6
00:00:10,980 --> 00:00:13,800
to get rid of this entire app module.

7
00:00:13,800 --> 00:00:16,140
So therefore we should go to the app component

8
00:00:16,140 --> 00:00:20,143
and there also add stand alone and set this to true.

9
00:00:21,430 --> 00:00:24,170
Now in there I want to use the app welcome

10
00:00:24,170 --> 00:00:25,790
or the welcome component

11
00:00:25,790 --> 00:00:29,160
so therefore we should add imports as you learned it

12
00:00:29,160 --> 00:00:31,400
and import the welcome component

13
00:00:31,400 --> 00:00:34,143
and also add an import to the file here.

14
00:00:35,650 --> 00:00:37,300
Now, with that, it will fail though

15
00:00:37,300 --> 00:00:39,410
because the app component is of course

16
00:00:39,410 --> 00:00:40,763
an important component.

17
00:00:41,620 --> 00:00:45,100
Yes, we would have to remove it from app declarations.

18
00:00:45,100 --> 00:00:48,180
But if I now add app component here to imports

19
00:00:48,180 --> 00:00:49,530
it will still fail,

20
00:00:49,530 --> 00:00:52,500
because as mentioned it is a key component.

21
00:00:52,500 --> 00:00:54,240
It's the root component.

22
00:00:54,240 --> 00:00:57,440
If we want to migrate the root component

23
00:00:57,440 --> 00:01:01,110
of our application and turn it into a standalone component,

24
00:01:01,110 --> 00:01:05,350
we also have to change our bootstrapping code in Main TS.

25
00:01:05,350 --> 00:01:07,960
Instead of bootstrapping with a module

26
00:01:07,960 --> 00:01:10,300
we now wanna bootstrap a component

27
00:01:10,300 --> 00:01:14,280
and just a component, because we just have a component now,

28
00:01:14,280 --> 00:01:16,540
we don't have a module anymore.

29
00:01:16,540 --> 00:01:19,620
I mean, we have one here, but we don't need it anymore

30
00:01:19,620 --> 00:01:22,070
because the root component is standalone

31
00:01:22,070 --> 00:01:24,950
and the idea behind standalone components is

32
00:01:24,950 --> 00:01:26,763
that they work without modules.

33
00:01:27,910 --> 00:01:29,540
Therefore in Main TS

34
00:01:29,540 --> 00:01:31,610
we now bootstrap the application,

35
00:01:31,610 --> 00:01:33,520
not with this code.

36
00:01:33,520 --> 00:01:36,320
We can get rid of that therefore.

37
00:01:36,320 --> 00:01:39,950
Instead we call a bootstrap application function

38
00:01:39,950 --> 00:01:44,653
which is imported from @angular/platform-browser.

39
00:01:45,700 --> 00:01:49,490
We import that, we import this function

40
00:01:49,490 --> 00:01:52,080
and cue bootstrap application,

41
00:01:52,080 --> 00:01:55,200
we pass a pointer at our root component.

42
00:01:55,200 --> 00:01:56,963
So in this case app component.

43
00:01:57,880 --> 00:02:01,940
I'm importing app component from app app component,

44
00:02:01,940 --> 00:02:03,490
and I'm pointing at it here.

45
00:02:03,490 --> 00:02:06,320
I'm passing this pointer at this class

46
00:02:06,320 --> 00:02:08,823
to the bootstrap application function.

47
00:02:09,720 --> 00:02:11,930
And with this, if we saved that,

48
00:02:11,930 --> 00:02:13,890
our application works again

49
00:02:13,890 --> 00:02:15,690
I also got no error here,

50
00:02:15,690 --> 00:02:17,420
the service still works,

51
00:02:17,420 --> 00:02:19,380
the directive obviously still works.

52
00:02:19,380 --> 00:02:22,960
And now we migrated everything to standalone components

53
00:02:22,960 --> 00:02:24,730
including the root component,

54
00:02:24,730 --> 00:02:28,160
which now must be bootstrapped with help of this function,

55
00:02:28,160 --> 00:02:30,980
which takes that single standalone component

56
00:02:30,980 --> 00:02:33,510
instead of an entire module.

57
00:02:33,510 --> 00:02:37,080
This all also means that we can get rid of app module now,

58
00:02:37,080 --> 00:02:39,360
of this entire file.

59
00:02:39,360 --> 00:02:42,190
Because this browser module which was imported

60
00:02:42,190 --> 00:02:46,070
is made available by bootstrap application anyways,

61
00:02:46,070 --> 00:02:47,890
it's made available by default.

62
00:02:47,890 --> 00:02:50,070
So we don't need to take care about that.

63
00:02:50,070 --> 00:02:53,110
And other than that, we only had imports here

64
00:02:53,110 --> 00:02:54,833
and we don't need that anymore.

65
00:02:55,730 --> 00:02:58,360
So now we can get rid of app module.

66
00:02:58,360 --> 00:03:00,690
And that was our goal in the end.

67
00:03:00,690 --> 00:03:03,490
And that is the biggest benefit we can get

68
00:03:03,490 --> 00:03:06,130
out of standalone components.

69
00:03:06,130 --> 00:03:08,710
Because now I got rid of both modules

70
00:03:08,710 --> 00:03:12,008
which I had in this application at the beginning

71
00:03:12,008 --> 00:03:15,860
and we therefore now have less boiler plate and leaner code.

72
00:03:15,860 --> 00:03:18,603
And if I save this, the app of course still works.

73
00:03:19,540 --> 00:03:20,970
Now, of course, we did have

74
00:03:20,970 --> 00:03:24,280
to add all these standalone flags

75
00:03:24,280 --> 00:03:26,590
and these imports properties,

76
00:03:26,590 --> 00:03:29,690
but it is possible that maybe in some future

77
00:03:29,690 --> 00:03:31,820
standalone components will be the default

78
00:03:31,820 --> 00:03:34,930
and therefore this flag doesn't have to be added anymore.

79
00:03:34,930 --> 00:03:38,340
Because in the future may be true is the default here

80
00:03:38,340 --> 00:03:40,640
and hence this can be omitted.

81
00:03:40,640 --> 00:03:42,870
but right now that's not the case yet.

82
00:03:42,870 --> 00:03:46,210
But then we would have less boiler plate code.

83
00:03:46,210 --> 00:03:47,750
And regarding imports,

84
00:03:47,750 --> 00:03:51,010
chances are that this is never going to disappear,

85
00:03:51,010 --> 00:03:54,050
but of course it's still less code to write

86
00:03:54,050 --> 00:03:55,740
and less boiler plate

87
00:03:55,740 --> 00:03:58,140
than you have with all those modules,

88
00:03:58,140 --> 00:04:00,050
especially in bigger applications

89
00:04:00,050 --> 00:04:03,730
where your modules can get very complex.

90
00:04:03,730 --> 00:04:06,140
So this is now this app migrated

91
00:04:06,140 --> 00:04:09,570
to standalone components and standalone directives.

92
00:04:09,570 --> 00:04:11,770
As a next step, let's take a closer look

93
00:04:11,770 --> 00:04:14,850
at services with standalone components

94
00:04:14,850 --> 00:04:18,063
before we then take a look at routing and lazy loading.

