1
00:00:02,150 --> 00:00:06,920
And to dive in, let's create a new project now for dad, make sure you are using the latest version

2
00:00:06,920 --> 00:00:13,820
of the Seelie with NPM, install Dashty at a regular Seelie at latest on Mac and Linux.

3
00:00:13,970 --> 00:00:16,550
You might need to add a pseudo in front of this on Windows.

4
00:00:16,550 --> 00:00:17,070
You don't.

5
00:00:17,720 --> 00:00:23,270
Now, once you got that installed, once you got that latest version installed, let's create a brand

6
00:00:23,270 --> 00:00:24,110
new project.

7
00:00:24,110 --> 00:00:26,610
And you know how that works with Injinoo.

8
00:00:26,930 --> 00:00:33,410
Now, actually, before we create such a project, lets it enter here without entering any name.

9
00:00:33,800 --> 00:00:38,890
Now, what you'll see is that if you do that, you actually also are prompted for a project, names

10
00:00:38,900 --> 00:00:41,990
you can also use to command in a shorter way.

11
00:00:42,620 --> 00:00:45,500
Now, let me skip this or cancel this with control.

12
00:00:45,510 --> 00:00:53,450
See for now and type engine you dash, dash, help the dash dash help flac can be used after any command

13
00:00:53,630 --> 00:00:57,890
to learn more about the command at the different configuration options you have available.

14
00:00:58,400 --> 00:01:04,550
So in this case, if I had enter, you see there are a bunch of flags we could add after the command

15
00:01:04,550 --> 00:01:11,030
so we could type engy new some name of our choice and then for example, dash dash collection or dash

16
00:01:11,030 --> 00:01:11,770
dash commit.

17
00:01:12,080 --> 00:01:16,440
And here you see a description of what these configuration flags do.

18
00:01:16,940 --> 00:01:19,460
Now these flags change over time.

19
00:01:19,460 --> 00:01:22,790
New options are added, some options are deprecated.

20
00:01:23,060 --> 00:01:26,090
So going through all of them does make a lot of sense here.

21
00:01:26,120 --> 00:01:30,380
But there are some which I want to draw your attention to this year.

22
00:01:30,380 --> 00:01:32,510
For example, will it become important later?

23
00:01:32,530 --> 00:01:33,980
Create application?

24
00:01:34,430 --> 00:01:39,620
It's set to true by default, so you only need to add it if you want to disable this.

25
00:01:39,860 --> 00:01:45,260
And right now, this doesn't make much sense to us, but will later see why this command can become

26
00:01:45,260 --> 00:01:47,030
very important and useful.

27
00:01:47,240 --> 00:01:54,020
It can become important if you want to manage multiple applications at libraries instead of one angular

28
00:01:54,020 --> 00:01:55,780
Seelie managed project.

29
00:01:55,790 --> 00:01:58,010
Again, more on that later.

30
00:01:59,180 --> 00:02:07,430
Dry run can also be interesting if you just want to see what dcl I would do with your command, with

31
00:02:07,430 --> 00:02:14,030
the engine you command here without actually creating the content on the disk does might sound like

32
00:02:14,030 --> 00:02:20,690
it doesn't make much sense, but if you're passing multiple configuration flags, adding dash dash dry

33
00:02:20,690 --> 00:02:27,530
run will spit out what the CIA will do thereafter so that you can verify whether you will get the project

34
00:02:27,530 --> 00:02:33,410
you want without actually going through the full set up process and writing everything to the disk,

35
00:02:33,410 --> 00:02:40,280
which can be nice at times with inline style and inline templates, you can set up whatever new components

36
00:02:40,280 --> 00:02:46,610
are going to generate will actually start with inline styles or inline templates or with external files.

37
00:02:46,910 --> 00:02:52,670
This can save you the hassle of setting this for every newly generated component individually.

38
00:02:54,420 --> 00:03:00,330
The prefix command allows you to configure the default prefix every new component you generate with

39
00:03:00,330 --> 00:03:02,330
the end you generate command will have.

40
00:03:02,580 --> 00:03:08,220
Now, let me also know that this point that many or most of these options actually can be changed to

41
00:03:08,220 --> 00:03:13,830
the existing project later to and it will show you where to change them and where to generally adjust

42
00:03:13,830 --> 00:03:15,840
the configuration in a separate lecture.

43
00:03:15,840 --> 00:03:21,600
Of course, routing allows you to specify whatever you want to start with a routing module and some

44
00:03:21,600 --> 00:03:22,500
initial routes.

45
00:03:22,920 --> 00:03:28,560
Skip tests allows you to define, however, newly generated components and services and so on will have

46
00:03:28,560 --> 00:03:30,150
testing files next to them.

47
00:03:30,540 --> 00:03:37,320
Skip Install allows you to create a new project with the files written to the disk without the NPM dependencies

48
00:03:37,320 --> 00:03:38,160
being installed.

49
00:03:38,430 --> 00:03:44,160
This speeds up the creation process and you can then always install the dependencies manually later.

50
00:03:44,970 --> 00:03:49,860
So these are some interesting options here and engine you dashers help allows you to go through them

51
00:03:50,370 --> 00:03:51,230
in detail.

52
00:03:51,690 --> 00:03:57,090
In addition, also check out the official documentation and that is true for all the things that will

53
00:03:57,090 --> 00:03:58,470
be showing throughout this module.

54
00:03:58,530 --> 00:04:01,400
I will also reference the official docs from time to time.

55
00:04:01,920 --> 00:04:08,160
There you find the latest up to date information about Angler, the Seelie, the different configuration

56
00:04:08,160 --> 00:04:11,130
files it uses, and for example, here often does Seelie.

57
00:04:11,130 --> 00:04:17,010
You find a list of all the commands it supports the Eleusis so the shortcuts you could use.

58
00:04:17,280 --> 00:04:21,720
And of course, then if you click on a command, you find detailed information about this command,

59
00:04:21,720 --> 00:04:24,030
what it does and which options you can set.

60
00:04:24,030 --> 00:04:28,340
There you see a bit more information about the different configuration options here.

61
00:04:28,470 --> 00:04:31,320
So definitely all the check out these pages here.

62
00:04:31,350 --> 00:04:37,560
If you want to learn more about the Seelie in general or the individual commands with that, let's create

63
00:04:37,560 --> 00:04:38,570
a new project here.

64
00:04:39,180 --> 00:04:46,680
So here I'm going to write engine you angular config and simply hit enter without any additional flags

65
00:04:46,770 --> 00:04:47,370
now than here.

66
00:04:47,370 --> 00:04:53,160
I get asked where I want to add routing and I'll choose N for no here and I'll choose C as as as my

67
00:04:53,160 --> 00:04:59,460
well stylesheet format so that I don't want to use SAS or Eskisehir, which you could do though you

68
00:04:59,460 --> 00:05:04,110
can choose that and then you can write your styles with a style preprocessor like SAS.

69
00:05:04,740 --> 00:05:10,320
Now since I didn't choose to try run or skip install, this creates the full project, installs all

70
00:05:10,320 --> 00:05:12,780
dependencies and writes everything to the disk.

71
00:05:13,320 --> 00:05:16,290
And I'll be back in a new lecture once this is finished.

